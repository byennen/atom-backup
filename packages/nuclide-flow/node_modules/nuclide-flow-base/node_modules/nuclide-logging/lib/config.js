
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, 'next'); var callThrow = step.bind(null, 'throw'); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

var _require = require('nuclide-commons');

var fsPromise = _require.fsPromise;

var path = require('path');

var USER = require('nuclide-commons').env.USER;

var LOG_FILE_PATH = '/tmp/nuclide-' + USER + '-logs/nuclide.log';

var logDirectory = path.dirname(LOG_FILE_PATH);
var logDirectoryInitialized = false;

module.exports = {
  getDefaultConfig: _asyncToGenerator(function* () {

    if (!logDirectoryInitialized) {
      yield fsPromise.mkdirp(logDirectory);
      logDirectoryInitialized = true;
    }

    return {
      appenders: [{
        'type': 'logLevelFilter',
        'level': 'INFO',
        'appender': {
          type: path.join(__dirname, './consoleAppender')
        }
      }, {
        type: 'dateFile',
        alwaysIncludePattern: true,
        absolute: true,
        filename: LOG_FILE_PATH,
        pattern: '-yyyy-MM-dd'
      }]
    };
  }),

  LOG_FILE_PATH: LOG_FILE_PATH
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWxvZ2dpbmcvbGliL2NvbmZpZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUM7Ozs7Ozs7Ozs7OztlQVdNLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQzs7SUFBdkMsU0FBUyxZQUFULFNBQVM7O0FBQ2QsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDOztJQUN0QixJQUFJLEdBQUksT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsR0FBRyxDQUF0QyxJQUFJOztBQUVULElBQUksYUFBYSxxQkFBbUIsSUFBSSxzQkFBbUIsQ0FBQzs7QUFFNUQsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUMvQyxJQUFJLHVCQUF1QixHQUFHLEtBQUssQ0FBQzs7QUFFcEMsTUFBTSxDQUFDLE9BQU8sR0FBRztBQUNmLEFBQU0sa0JBQWdCLG9CQUFBLGFBQWlCOztBQUVyQyxRQUFJLENBQUMsdUJBQXVCLEVBQUU7QUFDNUIsWUFBTSxTQUFTLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3JDLDZCQUF1QixHQUFHLElBQUksQ0FBQztLQUNoQzs7QUFFRCxXQUFPO0FBQ0wsZUFBUyxFQUFFLENBQ1Q7QUFDRSxjQUFNLEVBQUUsZ0JBQWdCO0FBQ3hCLGVBQU8sRUFBRSxNQUFNO0FBQ2Ysa0JBQVUsRUFBRTtBQUNWLGNBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQztTQUNoRDtPQUNGLEVBQ0Q7QUFDRSxZQUFJLEVBQUUsVUFBVTtBQUNoQiw0QkFBb0IsRUFBRSxJQUFJO0FBQzFCLGdCQUFRLEVBQUUsSUFBSTtBQUNkLGdCQUFRLEVBQUUsYUFBYTtBQUN2QixlQUFPLEVBQUUsYUFBYTtPQUN2QixDQUNGO0tBQ0YsQ0FBQztHQUNILENBQUE7O0FBRUQsZUFBYSxFQUFiLGFBQWE7Q0FDZCxDQUFDIiwiZmlsZSI6Ii92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWxvZ2dpbmcvbGliL2NvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuLyogQGZsb3cgKi9cblxuLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciB7ZnNQcm9taXNlfSA9IHJlcXVpcmUoJ251Y2xpZGUtY29tbW9ucycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIge1VTRVJ9ID0gcmVxdWlyZSgnbnVjbGlkZS1jb21tb25zJykuZW52O1xuXG52YXIgTE9HX0ZJTEVfUEFUSCA9IGAvdG1wL251Y2xpZGUtJHtVU0VSfS1sb2dzL251Y2xpZGUubG9nYDtcblxudmFyIGxvZ0RpcmVjdG9yeSA9IHBhdGguZGlybmFtZShMT0dfRklMRV9QQVRIKTtcbnZhciBsb2dEaXJlY3RvcnlJbml0aWFsaXplZCA9IGZhbHNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXN5bmMgZ2V0RGVmYXVsdENvbmZpZygpOiBQcm9taXNlPGFueT4ge1xuXG4gICAgaWYgKCFsb2dEaXJlY3RvcnlJbml0aWFsaXplZCkge1xuICAgICAgYXdhaXQgZnNQcm9taXNlLm1rZGlycChsb2dEaXJlY3RvcnkpO1xuICAgICAgbG9nRGlyZWN0b3J5SW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBhcHBlbmRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICd0eXBlJzogJ2xvZ0xldmVsRmlsdGVyJyxcbiAgICAgICAgICAnbGV2ZWwnOiAnSU5GTycsXG4gICAgICAgICAgJ2FwcGVuZGVyJzoge1xuICAgICAgICAgICAgdHlwZTogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4vY29uc29sZUFwcGVuZGVyJyksXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6ICdkYXRlRmlsZScsXG4gICAgICAgICAgYWx3YXlzSW5jbHVkZVBhdHRlcm46IHRydWUsXG4gICAgICAgICAgYWJzb2x1dGU6IHRydWUsXG4gICAgICAgICAgZmlsZW5hbWU6IExPR19GSUxFX1BBVEgsXG4gICAgICAgICAgcGF0dGVybjogJy15eXl5LU1NLWRkJyxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfSxcblxuICBMT0dfRklMRV9QQVRILFxufTtcbiJdfQ==
