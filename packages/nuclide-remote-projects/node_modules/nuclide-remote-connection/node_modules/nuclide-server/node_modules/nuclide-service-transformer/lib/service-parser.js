
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var babel = require('babel-core');
var fs = require('fs');

var _require = require('./method-name-parser');

var isEventMethodName = _require.isEventMethodName;

var cache = new Map();

function parseAst(sourceFilePath) {
  var sourceCode = fs.readFileSync(sourceFilePath, 'utf8');

  return babel.transform(sourceCode, {
    blacklist: ['es6.classes', 'flow', 'strict'],
    optional: ['es7.classProperties']
  }).ast;
}

/**
 * Parse service definition file and return an object like:
 * {className: $className, rpcMethodNames: [$methodName, ...], eventMethodNames: [$methodName, ..]}.
 * Keep it sync as it will be called from NuclideServer's constructor.
 */
function parseServiceApiSync(absoluteServiceDefinitionClassFilePath, serviceName) {
  if (cache.has(absoluteServiceDefinitionClassFilePath)) {
    return cache.get(absoluteServiceDefinitionClassFilePath);
  }

  var ast = parseAst(absoluteServiceDefinitionClassFilePath);

  var _ast$program$body$filter = ast.program.body.filter(function (astNode) {
    return astNode.type === 'ClassDeclaration' && astNode.id.name === serviceName;
  });

  var _ast$program$body$filter2 = _slicedToArray(_ast$program$body$filter, 1);

  var classDeclaration = _ast$program$body$filter2[0];

  var methodNames = classDeclaration.body.body
  // Because class bodies in ES7 can contain static property intializers, ensure a part is a
  // "MethodDefinition" before using it. Static properties have type "ClassProperty".
  .filter(function (bodyPart) {
    return bodyPart.type === 'MethodDefinition';
  }).map(function (methodDefinition) {
    return methodDefinition.key.name;
  });
  var rpcMethodNames = methodNames.filter(function (methodName) {
    return !isEventMethodName(methodName);
  });
  var eventMethodNames = methodNames.filter(function (methodName) {
    return isEventMethodName(methodName);
  });

  var serviceStructure = {
    className: classDeclaration.id.name,
    eventMethodNames: eventMethodNames,
    rpcMethodNames: rpcMethodNames
  };

  cache.set(absoluteServiceDefinitionClassFilePath + '$' + serviceName, serviceStructure);

  return serviceStructure;
}

module.exports = parseServiceApiSync;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXNlcnZpY2UtdHJhbnNmb3JtZXIvbGliL3NlcnZpY2UtcGFyc2VyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQzs7Ozs7Ozs7Ozs7O0FBV1osSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ2xDLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7ZUFDRyxPQUFPLENBQUMsc0JBQXNCLENBQUM7O0lBQXBELGlCQUFpQixZQUFqQixpQkFBaUI7O0FBRXRCLElBQUksS0FBdUIsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDOztBQUV4QyxTQUFTLFFBQVEsQ0FBQyxjQUFzQixFQUFPO0FBQzdDLE1BQUksVUFBVSxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxDQUFDOztBQUV6RCxTQUFPLEtBQUssQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFO0FBQ2pDLGFBQVMsRUFBRSxDQUFDLGFBQWEsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDO0FBQzVDLFlBQVEsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0dBQ2xDLENBQUMsQ0FBQyxHQUFHLENBQUM7Q0FDUjs7Ozs7OztBQU9ELFNBQVMsbUJBQW1CLENBQUMsc0NBQThDLEVBQUUsV0FBbUIsRUFBTztBQUNyRyxNQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsRUFBRTtBQUNyRCxXQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztHQUMxRDs7QUFFRCxNQUFJLEdBQUcsR0FBRyxRQUFRLENBQUMsc0NBQXNDLENBQUMsQ0FBQzs7aUNBRWxDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUNwQyxNQUFNLENBQUMsVUFBQSxPQUFPO1dBQUksT0FBTyxDQUFDLElBQUksS0FBSyxrQkFBa0IsSUFBSSxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksS0FBSyxXQUFXO0dBQUEsQ0FBQzs7OztNQUR6RixnQkFBZ0I7O0FBR3JCLE1BQUksV0FBVyxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJOzs7R0FHekMsTUFBTSxDQUFDLFVBQUEsUUFBUTtXQUFJLFFBQVEsQ0FBQyxJQUFJLEtBQUssa0JBQWtCO0dBQUEsQ0FBQyxDQUN4RCxHQUFHLENBQUMsVUFBQSxnQkFBZ0I7V0FBSSxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBSTtHQUFBLENBQUMsQ0FBQztBQUN0RCxNQUFJLGNBQWMsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQUEsVUFBVTtXQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDO0dBQUEsQ0FBQyxDQUFDO0FBQ3RGLE1BQUksZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFBLFVBQVU7V0FBSSxpQkFBaUIsQ0FBQyxVQUFVLENBQUM7R0FBQSxDQUFDLENBQUM7O0FBRXZGLE1BQUksZ0JBQWdCLEdBQUc7QUFDckIsYUFBUyxFQUFFLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxJQUFJO0FBQ25DLG9CQUFnQixFQUFoQixnQkFBZ0I7QUFDaEIsa0JBQWMsRUFBZCxjQUFjO0dBQ2YsQ0FBQzs7QUFFRixPQUFLLENBQUMsR0FBRyxDQUFDLHNDQUFzQyxHQUFHLEdBQUcsR0FBRyxXQUFXLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQzs7QUFFeEYsU0FBTyxnQkFBZ0IsQ0FBQztDQUN6Qjs7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFDIiwiZmlsZSI6Ii92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXNlcnZpY2UtdHJhbnNmb3JtZXIvbGliL3NlcnZpY2UtcGFyc2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIGJhYmVsID0gcmVxdWlyZSgnYmFiZWwtY29yZScpO1xudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbnZhciB7aXNFdmVudE1ldGhvZE5hbWV9ID0gcmVxdWlyZSgnLi9tZXRob2QtbmFtZS1wYXJzZXInKTtcblxudmFyIGNhY2hlOiBNYXA8c3RyaW5nLCBhbnk+ID0gbmV3IE1hcCgpO1xuXG5mdW5jdGlvbiBwYXJzZUFzdChzb3VyY2VGaWxlUGF0aDogc3RyaW5nKTogYW55IHtcbiAgdmFyIHNvdXJjZUNvZGUgPSBmcy5yZWFkRmlsZVN5bmMoc291cmNlRmlsZVBhdGgsICd1dGY4Jyk7XG5cbiAgcmV0dXJuIGJhYmVsLnRyYW5zZm9ybShzb3VyY2VDb2RlLCB7XG4gICAgYmxhY2tsaXN0OiBbJ2VzNi5jbGFzc2VzJywgJ2Zsb3cnLCAnc3RyaWN0J10sXG4gICAgb3B0aW9uYWw6IFsnZXM3LmNsYXNzUHJvcGVydGllcyddLFxuICB9KS5hc3Q7XG59XG5cbi8qKlxuICogUGFyc2Ugc2VydmljZSBkZWZpbml0aW9uIGZpbGUgYW5kIHJldHVybiBhbiBvYmplY3QgbGlrZTpcbiAqIHtjbGFzc05hbWU6ICRjbGFzc05hbWUsIHJwY01ldGhvZE5hbWVzOiBbJG1ldGhvZE5hbWUsIC4uLl0sIGV2ZW50TWV0aG9kTmFtZXM6IFskbWV0aG9kTmFtZSwgLi5dfS5cbiAqIEtlZXAgaXQgc3luYyBhcyBpdCB3aWxsIGJlIGNhbGxlZCBmcm9tIE51Y2xpZGVTZXJ2ZXIncyBjb25zdHJ1Y3Rvci5cbiAqL1xuZnVuY3Rpb24gcGFyc2VTZXJ2aWNlQXBpU3luYyhhYnNvbHV0ZVNlcnZpY2VEZWZpbml0aW9uQ2xhc3NGaWxlUGF0aDogc3RyaW5nLCBzZXJ2aWNlTmFtZTogc3RyaW5nKTogYW55IHtcbiAgaWYgKGNhY2hlLmhhcyhhYnNvbHV0ZVNlcnZpY2VEZWZpbml0aW9uQ2xhc3NGaWxlUGF0aCkpIHtcbiAgICByZXR1cm4gY2FjaGUuZ2V0KGFic29sdXRlU2VydmljZURlZmluaXRpb25DbGFzc0ZpbGVQYXRoKTtcbiAgfVxuXG4gIHZhciBhc3QgPSBwYXJzZUFzdChhYnNvbHV0ZVNlcnZpY2VEZWZpbml0aW9uQ2xhc3NGaWxlUGF0aCk7XG5cbiAgdmFyIFtjbGFzc0RlY2xhcmF0aW9uXSA9IGFzdC5wcm9ncmFtLmJvZHlcbiAgICAgIC5maWx0ZXIoYXN0Tm9kZSA9PiBhc3ROb2RlLnR5cGUgPT09ICdDbGFzc0RlY2xhcmF0aW9uJyAmJiBhc3ROb2RlLmlkLm5hbWUgPT09IHNlcnZpY2VOYW1lKTtcblxuICB2YXIgbWV0aG9kTmFtZXMgPSBjbGFzc0RlY2xhcmF0aW9uLmJvZHkuYm9keVxuICAgIC8vIEJlY2F1c2UgY2xhc3MgYm9kaWVzIGluIEVTNyBjYW4gY29udGFpbiBzdGF0aWMgcHJvcGVydHkgaW50aWFsaXplcnMsIGVuc3VyZSBhIHBhcnQgaXMgYVxuICAgIC8vIFwiTWV0aG9kRGVmaW5pdGlvblwiIGJlZm9yZSB1c2luZyBpdC4gU3RhdGljIHByb3BlcnRpZXMgaGF2ZSB0eXBlIFwiQ2xhc3NQcm9wZXJ0eVwiLlxuICAgIC5maWx0ZXIoYm9keVBhcnQgPT4gYm9keVBhcnQudHlwZSA9PT0gJ01ldGhvZERlZmluaXRpb24nKVxuICAgIC5tYXAobWV0aG9kRGVmaW5pdGlvbiA9PiBtZXRob2REZWZpbml0aW9uLmtleS5uYW1lKTtcbiAgdmFyIHJwY01ldGhvZE5hbWVzID0gbWV0aG9kTmFtZXMuZmlsdGVyKG1ldGhvZE5hbWUgPT4gIWlzRXZlbnRNZXRob2ROYW1lKG1ldGhvZE5hbWUpKTtcbiAgdmFyIGV2ZW50TWV0aG9kTmFtZXMgPSBtZXRob2ROYW1lcy5maWx0ZXIobWV0aG9kTmFtZSA9PiBpc0V2ZW50TWV0aG9kTmFtZShtZXRob2ROYW1lKSk7XG5cbiAgdmFyIHNlcnZpY2VTdHJ1Y3R1cmUgPSB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc0RlY2xhcmF0aW9uLmlkLm5hbWUsXG4gICAgZXZlbnRNZXRob2ROYW1lcyxcbiAgICBycGNNZXRob2ROYW1lcyxcbiAgfTtcblxuICBjYWNoZS5zZXQoYWJzb2x1dGVTZXJ2aWNlRGVmaW5pdGlvbkNsYXNzRmlsZVBhdGggKyAnJCcgKyBzZXJ2aWNlTmFtZSwgc2VydmljZVN0cnVjdHVyZSk7XG5cbiAgcmV0dXJuIHNlcnZpY2VTdHJ1Y3R1cmU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VTZXJ2aWNlQXBpU3luYztcbiJdfQ==
