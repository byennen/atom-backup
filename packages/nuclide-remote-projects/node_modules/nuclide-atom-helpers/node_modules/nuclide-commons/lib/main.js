
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

module.exports = Object.defineProperties({

  asyncFind: function asyncFind(items, test, thisArg) {
    return require('./promises').asyncFind(items, test, thisArg);
  },

  getConfigValueAsync: function getConfigValueAsync(key) {
    return require('./config').getConfigValueAsync(key);
  },

  asyncExecute: function asyncExecute(command, args, options) {
    return require('./process').asyncExecute(command, args, options);
  },

  checkOutput: function checkOutput(command, args, options) {
    return require('./process').checkOutput(command, args, options);
  },

  denodeify: function denodeify(f) {
    return require('./promises').denodeify(f);
  },

  safeSpawn: function safeSpawn(command, args) {
    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    return require('./process').safeSpawn(command, args, options);
  },

  readFile: function readFile(filePath, options) {
    return require('./filesystem').readFile(filePath, options);
  },

  findNearestFile: function findNearestFile(fileName, pathToDirectory) {
    return require('./filesystem').findNearestFile(fileName, pathToDirectory);
  }

}, {
  array: {
    get: function get() {
      return require('./array');
    },
    configurable: true,
    enumerable: true
  },
  object: {
    get: function get() {
      return require('./object');
    },
    configurable: true,
    enumerable: true
  },
  fsPromise: {
    get: function get() {
      return require('./filesystem');
    },
    configurable: true,
    enumerable: true
  },
  httpPromise: {
    get: function get() {
      return require('./http');
    },
    configurable: true,
    enumerable: true
  },
  strings: {
    get: function get() {
      return require('./strings');
    },
    configurable: true,
    enumerable: true
  },
  paths: {
    get: function get() {
      return require('./paths');
    },
    configurable: true,
    enumerable: true
  },
  PromiseQueue: {
    get: function get() {
      return require('./PromiseQueue');
    },
    configurable: true,
    enumerable: true
  },
  extend: {
    get: function get() {
      return require('./extend');
    },
    configurable: true,
    enumerable: true
  },
  debounce: {
    get: function get() {
      return require('./debounce');
    },
    configurable: true,
    enumerable: true
  },
  vcs: {
    get: function get() {
      return require('./vcs');
    },
    configurable: true,
    enumerable: true
  },
  url: {
    get: function get() {
      return require('./url');
    },
    configurable: true,
    enumerable: true
  },
  dnsUtils: {
    get: function get() {
      return require('./dns_utils');
    },
    configurable: true,
    enumerable: true
  },
  env: {
    get: function get() {
      return require('./environment');
    },
    configurable: true,
    enumerable: true
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWNvbW1vbnMvbGliL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDOzs7Ozs7Ozs7O0FBV1osTUFBTSxDQUFDLE9BQU8sMkJBQUc7O0FBRWYsV0FBUyxFQUFBLG1CQUFDLEtBQVksRUFBRSxJQUFTLEVBQUUsT0FBWSxFQUFXO0FBQ3hELFdBQU8sT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0dBQzlEOztBQUVELHFCQUFtQixFQUFBLDZCQUFDLEdBQVcsRUFBaUI7QUFDOUMsV0FBTyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUM7R0FDckQ7O0FBRUQsY0FBWSxFQUFBLHNCQUFDLE9BQWUsRUFBRSxJQUFtQixFQUFFLE9BQVksRUFBVztBQUN4RSxXQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNsRTs7QUFFRCxhQUFXLEVBQUEscUJBQUMsT0FBZSxFQUFFLElBQW1CLEVBQUUsT0FBZ0IsRUFBVztBQUMzRSxXQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNqRTs7QUFFRCxXQUFTLEVBQUEsbUJBQUMsQ0FBK0IsRUFBeUM7QUFDaEYsV0FBTyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQzNDOztBQUVELFdBQVMsRUFBQSxtQkFBQyxPQUFlLEVBQUUsSUFBbUIsRUFBcUQ7UUFBbkQsT0FBZ0IseURBQUcsRUFBRTs7QUFDbkUsV0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7R0FDL0Q7O0FBRUQsVUFBUSxFQUFBLGtCQUFDLFFBQWdCLEVBQUUsT0FBYSxFQUFXO0FBQ2pELFdBQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7R0FDNUQ7O0FBRUQsaUJBQWUsRUFBQSx5QkFBQyxRQUFnQixFQUFFLGVBQXVCLEVBQW9CO0FBQzNFLFdBQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7R0FDM0U7O0NBcURGO0FBbkRLLE9BQUs7U0FBQSxlQUFHO0FBQ1YsYUFBTyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDM0I7Ozs7QUFFRyxRQUFNO1NBQUEsZUFBRztBQUNYLGFBQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQzVCOzs7O0FBRUcsV0FBUztTQUFBLGVBQUc7QUFDZCxhQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUNoQzs7OztBQUVHLGFBQVc7U0FBQSxlQUFHO0FBQ2hCLGFBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzFCOzs7O0FBRUcsU0FBTztTQUFBLGVBQUc7QUFDWixhQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUM3Qjs7OztBQUVHLE9BQUs7U0FBQSxlQUFHO0FBQ1YsYUFBTyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDM0I7Ozs7QUFFRyxjQUFZO1NBQUEsZUFBRztBQUNqQixhQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ2xDOzs7O0FBRUcsUUFBTTtTQUFBLGVBQUc7QUFDWCxhQUFPLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUM1Qjs7OztBQUVHLFVBQVE7U0FBQSxlQUFHO0FBQ2IsYUFBTyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDOUI7Ozs7QUFFRyxLQUFHO1NBQUEsZUFBRztBQUNSLGFBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3pCOzs7O0FBRUcsS0FBRztTQUFBLGVBQUc7QUFDUixhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUN6Qjs7OztBQUVHLFVBQVE7U0FBQSxlQUFHO0FBQ2IsYUFBTyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDL0I7Ozs7QUFFRyxLQUFHO1NBQUEsZUFBRztBQUNSLGFBQU8sT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0tBQ2pDOzs7O0VBQ0YsQ0FBQyIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wZW1tMkh1cHVibGlzaF9wYWNrYWdlcy9ucG0vbnVjbGlkZS1jb21tb25zL2xpYi9tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cbiAgYXN5bmNGaW5kKGl0ZW1zOiBBcnJheSwgdGVzdDogYW55LCB0aGlzQXJnOiBhbnkpOiBQcm9taXNlIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9wcm9taXNlcycpLmFzeW5jRmluZChpdGVtcywgdGVzdCwgdGhpc0FyZyk7XG4gIH0sXG5cbiAgZ2V0Q29uZmlnVmFsdWVBc3luYyhrZXk6IHN0cmluZyk6ICgpID0+IFByb21pc2Uge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2NvbmZpZycpLmdldENvbmZpZ1ZhbHVlQXN5bmMoa2V5KTtcbiAgfSxcblxuICBhc3luY0V4ZWN1dGUoY29tbWFuZDogc3RyaW5nLCBhcmdzOiBBcnJheTxzdHJpbmc+LCBvcHRpb25zOiBhbnkpOiBQcm9taXNlIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9wcm9jZXNzJykuYXN5bmNFeGVjdXRlKGNvbW1hbmQsIGFyZ3MsIG9wdGlvbnMpO1xuICB9LFxuXG4gIGNoZWNrT3V0cHV0KGNvbW1hbmQ6IHN0cmluZywgYXJnczogQXJyYXk8c3RyaW5nPiwgb3B0aW9uczogP09iamVjdCk6IFByb21pc2Uge1xuICAgIHJldHVybiByZXF1aXJlKCcuL3Byb2Nlc3MnKS5jaGVja091dHB1dChjb21tYW5kLCBhcmdzLCBvcHRpb25zKTtcbiAgfSxcblxuICBkZW5vZGVpZnkoZjogKC4uLmFyZ3M6IEFycmF5PGFueT4pID0+IGFueSk6ICguLi5hcmdzOiBBcnJheTxhbnk+KSA9PiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiByZXF1aXJlKCcuL3Byb21pc2VzJykuZGVub2RlaWZ5KGYpO1xuICB9LFxuXG4gIHNhZmVTcGF3bihjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IEFycmF5PHN0cmluZz4sIG9wdGlvbnM/OiBPYmplY3QgPSB7fSk6IGNoaWxkX3Byb2Nlc3MkQ2hpbGRQcm9jZXNzIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9wcm9jZXNzJykuc2FmZVNwYXduKGNvbW1hbmQsIGFyZ3MsIG9wdGlvbnMpO1xuICB9LFxuXG4gIHJlYWRGaWxlKGZpbGVQYXRoOiBzdHJpbmcsIG9wdGlvbnM/OiBhbnkpOiBQcm9taXNlIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9maWxlc3lzdGVtJykucmVhZEZpbGUoZmlsZVBhdGgsIG9wdGlvbnMpO1xuICB9LFxuXG4gIGZpbmROZWFyZXN0RmlsZShmaWxlTmFtZTogc3RyaW5nLCBwYXRoVG9EaXJlY3Rvcnk6IHN0cmluZyk6IFByb21pc2U8P3N0cmluZz4ge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2ZpbGVzeXN0ZW0nKS5maW5kTmVhcmVzdEZpbGUoZmlsZU5hbWUsIHBhdGhUb0RpcmVjdG9yeSk7XG4gIH0sXG5cbiAgZ2V0IGFycmF5KCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2FycmF5Jyk7XG4gIH0sXG5cbiAgZ2V0IG9iamVjdCgpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9vYmplY3QnKTtcbiAgfSxcblxuICBnZXQgZnNQcm9taXNlKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2ZpbGVzeXN0ZW0nKTtcbiAgfSxcblxuICBnZXQgaHR0cFByb21pc2UoKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vaHR0cCcpO1xuICB9LFxuXG4gIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL3N0cmluZ3MnKTtcbiAgfSxcblxuICBnZXQgcGF0aHMoKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vcGF0aHMnKTtcbiAgfSxcblxuICBnZXQgUHJvbWlzZVF1ZXVlKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL1Byb21pc2VRdWV1ZScpO1xuICB9LFxuXG4gIGdldCBleHRlbmQoKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vZXh0ZW5kJyk7XG4gIH0sXG5cbiAgZ2V0IGRlYm91bmNlKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2RlYm91bmNlJyk7XG4gIH0sXG5cbiAgZ2V0IHZjcygpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi92Y3MnKTtcbiAgfSxcblxuICBnZXQgdXJsKCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL3VybCcpO1xuICB9LFxuXG4gIGdldCBkbnNVdGlscygpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9kbnNfdXRpbHMnKTtcbiAgfSxcblxuICBnZXQgZW52KCkge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2Vudmlyb25tZW50Jyk7XG4gIH0sXG59O1xuIl19
