
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, 'next'); var callThrow = step.bind(null, 'throw'); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('./utils');

var DUMMY_FRAME_ID = _require.DUMMY_FRAME_ID;

var Handler = require('./Handler');

// Handles all 'Runtime.*' Chrome dev tools messages

var RuntimeHandler = (function (_Handler) {
  _inherits(RuntimeHandler, _Handler);

  function RuntimeHandler(callback, dataCache) {
    _classCallCheck(this, RuntimeHandler);

    _get(Object.getPrototypeOf(RuntimeHandler.prototype), 'constructor', this).call(this, 'Runtime', callback);

    this._dataCache = dataCache;
  }

  _createClass(RuntimeHandler, [{
    key: 'handleMethod',
    value: _asyncToGenerator(function* (id, method, params) {
      switch (method) {
        case 'enable':
          this._notifyExecutionContext(id);
          break;

        case 'getProperties':
          yield this._getProperties(id, params);
          break;

        default:
          this.unknownMethod(id, method, params);
          break;
      }
    })
  }, {
    key: '_notifyExecutionContext',
    value: function _notifyExecutionContext(id) {
      this.sendMethod('Runtime.executionContextCreated', {
        'context': {
          'id': 1,
          'frameId': DUMMY_FRAME_ID,
          'name': 'hhvm: TODO: mangle in pid, idekey, script from connection'
        }
      });
      this.replyToCommand(id, {});
    }
  }, {
    key: '_getProperties',
    value: _asyncToGenerator(function* (id, params) {
      // params also has properties:
      //    ownProperties
      //    generatePreview
      var objectId = params.objectId;
      var accessorPropertiesOnly = params.accessorPropertiesOnly;

      var result;
      if (!accessorPropertiesOnly) {
        result = yield this._dataCache.getProperties(objectId);
      } else {
        // TODO: Handle remaining params
        result = [];
      }
      this.replyToCommand(id, { result: result });
    })
  }]);

  return RuntimeHandler;
})(Handler);

module.exports = RuntimeHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBlbW0ySHVwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWRlYnVnZ2VyLWhodm0tcHJveHkvbGliL1J1bnRpbWVIYW5kbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFZVyxPQUFPLENBQUMsU0FBUyxDQUFDOztJQUFwQyxjQUFjLFlBQWQsY0FBYzs7QUFDbkIsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzs7O0lBRzdCLGNBQWM7WUFBZCxjQUFjOztBQUdQLFdBSFAsY0FBYyxDQUdOLFFBQXdCLEVBQUUsU0FBb0IsRUFBRTswQkFIeEQsY0FBYzs7QUFJaEIsK0JBSkUsY0FBYyw2Q0FJVixTQUFTLEVBQUUsUUFBUSxFQUFFOztBQUUzQixRQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztHQUM3Qjs7ZUFQRyxjQUFjOzs2QkFTQSxXQUFDLEVBQVUsRUFBRSxNQUFjLEVBQUUsTUFBZSxFQUFXO0FBQ3ZFLGNBQVEsTUFBTTtBQUNkLGFBQUssUUFBUTtBQUNYLGNBQUksQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNqQyxnQkFBTTs7QUFBQSxBQUVSLGFBQUssZUFBZTtBQUNsQixnQkFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN0QyxnQkFBTTs7QUFBQSxBQUVSO0FBQ0UsY0FBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ3ZDLGdCQUFNO0FBQUEsT0FDUDtLQUNGOzs7V0FFc0IsaUNBQUMsRUFBVSxFQUFRO0FBQ3hDLFVBQUksQ0FBQyxVQUFVLENBQUMsaUNBQWlDLEVBQ2pEO0FBQ0UsaUJBQVMsRUFBRTtBQUNULGNBQUksRUFBRSxDQUFDO0FBQ1AsbUJBQVMsRUFBRSxjQUFjO0FBQ3pCLGdCQUFNLEVBQUUsMkRBQTJEO1NBQ3BFO09BQ0YsQ0FBQyxDQUFDO0FBQ0gsVUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDN0I7Ozs2QkFFbUIsV0FBQyxFQUFVLEVBQUUsTUFBYyxFQUFXOzs7O1VBSW5ELFFBQVEsR0FBNEIsTUFBTSxDQUExQyxRQUFRO1VBQUUsc0JBQXNCLEdBQUksTUFBTSxDQUFoQyxzQkFBc0I7O0FBQ3JDLFVBQUksTUFBTSxDQUFDO0FBQ1gsVUFBSSxDQUFDLHNCQUFzQixFQUFFO0FBQzNCLGNBQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO09BQ3hELE1BQU07O0FBRUwsY0FBTSxHQUFHLEVBQUUsQ0FBQztPQUNiO0FBQ0QsVUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxNQUFNLEVBQU4sTUFBTSxFQUFDLENBQUMsQ0FBQztLQUNuQzs7O1NBbERHLGNBQWM7R0FBUyxPQUFPOztBQXFEcEMsTUFBTSxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUMiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcGVtbTJIdXB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtZGVidWdnZXItaGh2bS1wcm94eS9saWIvUnVudGltZUhhbmRsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cbnZhciB7RFVNTVlfRlJBTUVfSUR9ID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIEhhbmRsZXIgPSByZXF1aXJlKCcuL0hhbmRsZXInKTtcblxuLy8gSGFuZGxlcyBhbGwgJ1J1bnRpbWUuKicgQ2hyb21lIGRldiB0b29scyBtZXNzYWdlc1xuY2xhc3MgUnVudGltZUhhbmRsZXIgZXh0ZW5kcyBIYW5kbGVyIHtcbiAgX2RhdGFDYWNoZTogRGF0YUNhY2hlO1xuXG4gIGNvbnN0cnVjdG9yKGNhbGxiYWNrOiBDaHJvbWVDYWxsYmFjaywgZGF0YUNhY2hlOiBEYXRhQ2FjaGUpIHtcbiAgICBzdXBlcignUnVudGltZScsIGNhbGxiYWNrKTtcblxuICAgIHRoaXMuX2RhdGFDYWNoZSA9IGRhdGFDYWNoZTtcbiAgfVxuXG4gIGFzeW5jIGhhbmRsZU1ldGhvZChpZDogbnVtYmVyLCBtZXRob2Q6IHN0cmluZywgcGFyYW1zOiA/T2JqZWN0KTogUHJvbWlzZSB7XG4gICAgc3dpdGNoIChtZXRob2QpIHtcbiAgICBjYXNlICdlbmFibGUnOlxuICAgICAgdGhpcy5fbm90aWZ5RXhlY3V0aW9uQ29udGV4dChpZCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2dldFByb3BlcnRpZXMnOlxuICAgICAgYXdhaXQgdGhpcy5fZ2V0UHJvcGVydGllcyhpZCwgcGFyYW1zKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRoaXMudW5rbm93bk1ldGhvZChpZCwgbWV0aG9kLCBwYXJhbXMpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgX25vdGlmeUV4ZWN1dGlvbkNvbnRleHQoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc2VuZE1ldGhvZCgnUnVudGltZS5leGVjdXRpb25Db250ZXh0Q3JlYXRlZCcsXG4gICAge1xuICAgICAgJ2NvbnRleHQnOiB7XG4gICAgICAgICdpZCc6IDEsXG4gICAgICAgICdmcmFtZUlkJzogRFVNTVlfRlJBTUVfSUQsXG4gICAgICAgICduYW1lJzogJ2hodm06IFRPRE86IG1hbmdsZSBpbiBwaWQsIGlkZWtleSwgc2NyaXB0IGZyb20gY29ubmVjdGlvbicsXG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5yZXBseVRvQ29tbWFuZChpZCwge30pO1xuICB9XG5cbiAgYXN5bmMgX2dldFByb3BlcnRpZXMoaWQ6IG51bWJlciwgcGFyYW1zOiBPYmplY3QpOiBQcm9taXNlIHtcbiAgICAvLyBwYXJhbXMgYWxzbyBoYXMgcHJvcGVydGllczpcbiAgICAvLyAgICBvd25Qcm9wZXJ0aWVzXG4gICAgLy8gICAgZ2VuZXJhdGVQcmV2aWV3XG4gICAgdmFyIHtvYmplY3RJZCwgYWNjZXNzb3JQcm9wZXJ0aWVzT25seX0gPSBwYXJhbXM7XG4gICAgdmFyIHJlc3VsdDtcbiAgICBpZiAoIWFjY2Vzc29yUHJvcGVydGllc09ubHkpIHtcbiAgICAgIHJlc3VsdCA9IGF3YWl0IHRoaXMuX2RhdGFDYWNoZS5nZXRQcm9wZXJ0aWVzKG9iamVjdElkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVE9ETzogSGFuZGxlIHJlbWFpbmluZyBwYXJhbXNcbiAgICAgIHJlc3VsdCA9IFtdO1xuICAgIH1cbiAgICB0aGlzLnJlcGx5VG9Db21tYW5kKGlkLCB7cmVzdWx0fSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSdW50aW1lSGFuZGxlcjtcbiJdfQ==
